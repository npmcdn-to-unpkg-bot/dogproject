{"version":3,"sources":["dashboard/controllers/DashboardController.js","dashboard/controllers/RatingsController.js","dashboard/controllers/UserSettingsController.js","dashboard/controllers/VerificationController.js","home/controllers/HomeControllers.js","login/controllers/LoginController.js","dogs/controllers/DogsController.js","register/controllers/RegisterController.js","search/controllers/SearchController.js","review/controllers/SellerReviewController.js"],"names":[],"mappingsnXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"modules.js","sourcesContent":["module.controller('DashboardController', function($rootScope, $scope, loggedUser, Upload) {\n\n    $rootScope.seller = (loggedUser.role == \"1\") ? loggedUser : {};\n\n    $scope.rating1 = 0;\n    $scope.rating2 = 0;\n    $scope.rating3 = 0;\n    $scope.rating4 = 0;\n    $scope.rating5 = 0;\n\n\n    $scope.handleReview = function(ratings) {\n\n        angular.forEach(ratings,function(rating) {\n\n            $scope.rating1 += parseFloat(rating.rating1);\n            $scope.rating2 += parseFloat(rating.rating2);\n            $scope.rating3 += parseFloat(rating.rating3);\n            $scope.rating4 += parseFloat(rating.rating4);\n            $scope.rating5 += parseFloat(rating.rating5);\n        });\n\n        $scope.rating1 = $scope.rating1 / loggedUser.seller.review.length;\n        $scope.rating2 = $scope.rating2 / loggedUser.seller.review.length;\n        $scope.rating3 = $scope.rating3 / loggedUser.seller.review.length;\n        $scope.rating4 = $scope.rating4 / loggedUser.seller.review.length;\n        $scope.rating5 = $scope.rating5 / loggedUser.seller.review.length;\n    };\n\n    $scope.handleReview(loggedUser.seller.review);\n    console.log($scope.rating1,$scope.rating2,$scope.rating3,$scope.rating4,$scope.rating5);\n});\n\nmodule.controller('ListController', function($rootScope, $scope, loggedUser, Other, Dog, Upload, BeyondiThorAuth) {\n\n\n    /**\n     * Dog List object\n     *\n     * @type {{}}\n     */\n\n    $scope.dog = {};\n\n\n    /**\n     * Parent Slider Object\n     *\n     * @type {{start: number, range: {min: number, max: number}, step: number}}\n     */\n    $rootScope.parentSlider = {start:1,range:{'min':1,'max':3},step:1};\n\n    /**\n     * Type of Listing Selected\n     */\n\n    $scope.selectedListing = 'Please Select...';\n\n    /**\n     * Dog Breed Selected\n     */\n\n    $scope.selectedBreed = 'Please Select...';\n\n    /**\n     * Selected Father\n     *\n     * @type {string}\n     */\n\n    $scope.selectedFather = 'Please Select...';\n\n    /**\n     * Selected Mother\n     *\n     * @type {string}\n     */\n    $scope.selectedMother = 'Please Select...';\n\n    /**\n     * Dog Parent Object\n     *\n     * @type {{}}\n     */\n\n    $rootScope.parent = {};\n\n    /**\n     * Parent Breed Selected\n     *\n     */\n    $rootScope.parentBreedSelected = 'Please Select...';\n\n    /**\n     * Current Seller in scope\n     */\n\n    $rootScope.seller = (loggedUser.role == \"1\") ? loggedUser : {};\n\n    /**\n     *  Get Dog Beeds\n     *\n     */\n\n    Other.getBreed().then(function(breeds) {\n\n        $rootScope.breeds = breeds.data\n\n    });\n\n    /**\n     *  Get Dog Fathers\n     */\n\n    Dog.getFather().then(function(father) {\n        $rootScope.fathers = father.data;\n    });\n\n    /**\n     *  Get Dog Mothers\n     */\n\n    Dog.getMother().then(function(mother) {\n        $rootScope.mothers = mother.data;\n    });\n\n    /**\n     * Add new father\n     *\n     * @param type\n     *\n     */\n\n    $scope.addNewFather = function() {\n        $rootScope.father = true;\n        $scope.resetSelectedFather();\n    };\n\n    /**\n     * Add new mother\n     *\n     */\n\n    $scope.addNewMother = function() {\n        $rootScope.mother = true;\n        $scope.resetSelectedMother();\n    };\n\n    /**\n     * Select Breed\n     *\n     */\n\n    $scope.selectBreed = function(breed) {\n\n        $scope.selectedBreed = breed.breed;\n        $scope.dog.breed_id  = breed.id;\n    };\n\n    $scope.resetSelectedBreed = function() {\n        $scope.selectedBreed = 'Please Select...'\n    }\n\n    /**\n     * Select Listing Type\n     *\n     */\n\n    $scope.selectListingType = function(type) {\n\n        $scope.selectedListing = type.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n        $scope.dog.type_of_listing  = type;\n    };\n\n    /**\n     * Reset Selected Dog Type\n     *\n     */\n\n    $scope.resetSelectedType = function() {\n        $scope.selectedListing = 'Please Select...';\n    };\n\n    /**\n     * Select mother and show edit form\n     *\n     * @param mother\n     */\n\n    $scope.selectMother = function(mother) {\n        //adding to dog object for saving child\n        $scope.dog.mother_id = mother.id;\n        //adding into dropdown selection button\n        $scope.selectedMother = mother.name;\n        //adding into show selected mother to show image\n        $scope.showSelectedMother = mother;\n        $rootScope.mother = false;\n    };\n\n    /**\n     * Reset Selected Mother\n     *\n     */\n\n    $scope.resetSelectedMother = function() {\n        $scope.dog.mother_id = '';\n        $scope.selectedMother = 'Please Select...';\n        $scope.showSelectedMother = false;\n    };\n\n    /**\n     * Select Father\n     *\n     * @param father\n     */\n\n    $scope.selectFather = function(father) {\n        //adding to dog object for saving child\n        $scope.dog.father_id = father.id;\n        //adding into dropdown selection button\n        $scope.selectedFather = father.name;\n        //adding into show selected mother to show image\n        $scope.showSelectedFather = father;\n        $rootScope.father = false;\n    };\n\n    /**\n     * Reset Selected Father\n     *\n     */\n\n    $scope.resetSelectedFather = function() {\n        $scope.dog.father_id = '';\n        $scope.selectedFather = 'Please Select...';\n        $scope.showSelectedFather = false;\n    };\n\n    /**\n     * Upload Father Image\n     *\n     * @param file\n     */\n    $scope.uploadFatherPic = function(file,id) {\n        file.upload = Upload.upload({\n            url: 'http://api.petagree/api/dog/father/image',\n            data: {image: file, father_id: id},\n            headers: {'Authorization': 'Bearer ' + BeyondiThorAuth.accessToken }\n        });\n    };\n    /**\n     * Upload Father Image\n     *\n     * @param files array\n     * @param id integer\n     */\n    $scope.uploadDogPic = function(files,id) {\n        Upload.upload({\n            url: 'http://api.petagree/api/dog/images',\n            data: {images: files, dog_id: id},\n            headers: {'Authorization': 'Bearer ' + BeyondiThorAuth.accessToken }\n        });\n    };\n\n    /**\n     * Upload Father Image\n     *\n     * @param file\n     */\n    $scope.uploadMotherPic = function(file,id) {\n        file.upload = Upload.upload({\n            url: 'http://api.petagree/api/dog/mother/image',\n            data: {image: file, mother_id: id},\n            headers: {'Authorization': 'Bearer ' + BeyondiThorAuth.accessToken }\n        });\n    };\n\n\n\n    /**\n     * Select Parent Breed\n     *\n     */\n\n    $rootScope.selectParentBreed = function(breed) {\n\n        $rootScope.parentBreedSelected = breed.breed;\n        $rootScope.parent.breed_id  = breed.id;\n    };\n\n    /**\n     * Save Parent\n     *\n     * @param parentForm\n     * @param parent\n     *\n     */\n\n    $rootScope.saveParent = function(parentForm,parent,type) {\n\n        // we need to check if form is valid\n        if(parentForm.$valid) {\n\n            //crating father\n            if(type == 'father') {\n\n                Dog.postFather(parent).then(function(dog){\n                    // posting father picture after create is finished and\n                    // updating image field\n                    $scope.uploadFatherPic(parent.parentImage, dog.data);\n                    // updating scope so new parents are loaded\n                    Dog.getFather().then(function(father) {\n                        $rootScope.fathers = father.data;\n                    });\n\n                });\n            }\n            //creating mother\n            else if (type == 'mother') {\n\n                Dog.postMother(parent).then(function(dog){\n                    // posting mother picture after create is finished and\n                    // updating image field.\n                    $scope.uploadMotherPic(parent.parentImage, dog.data);\n\n                    Dog.getMother().then(function(father) {\n                        $rootScope.mothers = father.data;\n                    });\n                });\n            }\n            // cleaning form\n            parentForm.$setPristine();\n            $rootScope.parent = {};\n            $rootScope.parentSlider = {start:1,range:{'min':1,'max':3},step:1};\n        }\n    }\n\n\n    $scope.listDog = function(listForm,dog) {\n\n        if(listForm.$valid) {\n\n            Dog.post(dog).then(function(savedDog) {\n\n                $scope.uploadDogPic($scope.prepareImages(dog.image),savedDog.data.id);\n                $scope.dog = {};\n                $scope.resetSelectedFather();\n                $scope.resetSelectedMother();\n                $scope.resetSelectedBreed();\n                $scope.resetSelectedType();\n\n            }).catch(function(response) {\n                //TODO: HANDLE RESPONSE ERROR\n                console.log(response);\n            });\n        }\n\n        listForm.$setPirstine();\n    };\n\n    $scope.prepareImages = function(images) {\n\n        var prepared = []\n        angular.forEach(images,function(value,key) {\n            if(value !== null) {\n                prepared.push(value);\n            }\n        });\n\n        return prepared;\n    }\n});\n","module.controller('RatingsController', function($rootScope,$scope, loggedUser) {\n\n    $rootScope.seller = (loggedUser.role == \"1\") ? loggedUser : {};\n\n    $scope.emailFields = ['email'];\n\n    $scope.rating1 = 0;\n    $scope.rating2 = 0;\n    $scope.rating3 = 0;\n    $scope.rating4 = 0;\n    $scope.rating5 = 0;\n\n\n    $scope.handleReview = function(ratings) {\n\n        angular.forEach(ratings,function(rating) {\n\n            $scope.rating1 += parseFloat(rating.rating1);\n            $scope.rating2 += parseFloat(rating.rating2);\n            $scope.rating3 += parseFloat(rating.rating3);\n            $scope.rating4 += parseFloat(rating.rating4);\n            $scope.rating5 += parseFloat(rating.rating5);\n        });\n\n        $scope.rating1 = $scope.rating1 / loggedUser.seller.review.length;\n        $scope.rating2 = $scope.rating2 / loggedUser.seller.review.length;\n        $scope.rating3 = $scope.rating3 / loggedUser.seller.review.length;\n        $scope.rating4 = $scope.rating4 / loggedUser.seller.review.length;\n        $scope.rating5 = $scope.rating5 / loggedUser.seller.review.length;\n    };\n\n    $scope.handleReview(loggedUser.seller.review);\n});","module.controller('UserSettingsController', function($rootScope, $scope, loggedUser, State, Suburb, User, Seller, Upload, toastr, BeyondiThorAuth) {\n\n    $rootScope.seller = (loggedUser.role == \"1\") ? loggedUser : {};\n\n    $scope.selectedState = loggedUser.seller.state.name;\n\n    $scope.selectedSuburb = loggedUser.seller.suburb.suburb;\n\n    /**\n     * Select State Function\n     *\n     * @param state\n     */\n    $scope.selectState = function(state) {\n\n        $scope.selectedState = state.name;\n        $scope.selectedSuburb = 'Loading Suburbs...';\n\n        Suburb.getList({\"state_id\": state.id}).then(function(suburbs) {\n\n            $scope.selectedSuburb = 'Please Select...';\n            $scope.suburbs = suburbs.plain();\n        });\n\n        $scope.seller.seller.state_id = state.id;\n    };\n\n    /**\n     * Get State Lists\n     */\n\n    State.getList().then(function(states) {\n        $scope.states = states.plain();\n    });\n\n    /**\n     * Get Suburb Lists\n     *\n     */\n\n    Suburb.getList({\"state_id\": loggedUser.seller.state.id}).then(function(suburbs) {\n\n        $scope.suburbs = suburbs.plain();\n    });\n\n    /**\n     * Upload Seller Image\n     *\n     * @param file\n     * @param id\n     */\n\n    $scope.uploadSellerPic = function(file) {\n        return file.upload = Upload.upload({\n            url: 'http://api.petagree/api/seller/image',\n            data: {avatar: file},\n            headers: {'Authorization': 'Bearer ' + BeyondiThorAuth.accessToken }\n        });\n    };\n\n    /**\n     * Select Suburb Function\n     *\n     * @param key\n     * @param id\n     */\n\n    $scope.selectSuburb = function(suburb) {\n        $scope.selectedSuburb = suburb.suburb;\n        $scope.seller.seller.suburb_id = suburb.id;\n    };\n\n\n    $scope.updateUser = function(user, seller, avatar, password) {\n\n        User.patchUser(user).then(function(user) {\n            toastr.success('Account informations are up - to date.','Success');\n\n            Seller.putSeller(seller).then(function(seller) {\n                toastr.success('Seller informations are up - to date.','Success');\n\n                if(typeof avatar != 'undefined') {\n\n                    $scope.uploadSellerPic(avatar).then(function(res) {\n                        toastr.success('Avatar was successfully changed','Success');\n                    });\n                }\n                if(typeof password != 'undefined') {\n\n                    User.changePassword(password).then(function() {\n                        toastr.success('Account password is changed','Success');\n                    });\n                }\n\n            });\n        });\n    };\n\n});","module.controller('VerificationController', function($rootScope, $scope, loggedUser, Upload, Seller, toastr, BeyondiThorAuth) {\n\n    $rootScope.seller = (loggedUser.role == \"1\") ? loggedUser : {};\n\n    $scope.selectedOrganisation = 'Please select organisation...';\n\n    $scope.verification = {};\n\n    $scope.selectOrganisation = function(id) {\n        $scope.selectedOrganisation = id;\n        $scope.verification.type = id;\n    };\n\n    $scope.resetOrganisation = function() {\n        $scope.selectedOrganisation = 'Please select organisation...';\n    };\n\n    /**\n     * Upload Seller Proof\n     *\n     * @param file\n     * @param id\n     */\n\n    $scope.uploadSellerProof = function(file) {\n        return file.upload = Upload.upload({\n            url: 'http://api.petagree/api/seller/verification/proof',\n            data: {proof: file},\n            headers: {'Authorization': 'Bearer ' + BeyondiThorAuth.accessToken }\n        });\n    };\n\n\n    $scope.verifySeller = function(verification,proof) {\n\n        Seller.verifySeller(verification).then(function(seller) {\n\n            $scope.resetOrganisation();\n            $scope.verification = {};\n\n            if(typeof proof != 'undefined') {\n                $scope.uploadSellerProof(proof).then(function() {\n                    $scope.proof = {};\n                });\n            }\n            toastr.success('Your verification enquiry is received.','Success');\n\n        }).catch(function(response) {\n            if(response.status == 400) {\n                toastr.success('You request for verification is already accepted.','Information');\n            }\n        });\n    }\n\n});","module.controller('HomeController', function($scope) {\n\n    $scope.names = [\"john\", \"bill\", \"charlie\", \"robert\", \"alban\", \"oscar\", \"marie\", \"celine\", \"brad\", \"drew\", \"rebecca\", \"michel\", \"francis\", \"jean\", \"paul\", \"pierre\", \"nicolas\", \"alfred\", \"gerard\", \"louis\", \"albert\", \"edouard\", \"benoit\", \"guillaume\", \"nicolas\", \"joseph\"];\n});","module.controller('LoginController',['$scope','$state','User','Token','BeyondiThorAuth', function($scope,$state, User, Token,BeyondiThorAuth) {\n\n    $scope.loginSeller = function (loginForm,credentials) {\n\n        if(loginForm.$valid) {\n\n            Token.login(credentials).then(function(token) {\n\n                BeyondiThorAuth.setUser(token.data.token);\n                BeyondiThorAuth.rememberMe = true;\n                BeyondiThorAuth.save();\n                $state.go('dashboard.index');\n\n            }).catch(function(response) {\n\n            });\n        }\n    }\n\n}]);\n","module.controller('DogsController', function($scope, dog, Seller,toastr) {\n\n    /**\n     * Create empty enquiry object\n     *\n     * @type {{}}\n     */\n\n    $scope.enquiry = {};\n\n    /**\n     * Add resolved dog into\n     * the scope\n     *\n     */\n\n    $scope.dog = dog;\n\n    /**\n     * Get current date and calculate\n     * dog life by days\n     *\n     * @type {Date}\n     *\n     */\n\n    $scope.currentDate = new Date();\n\n    /**\n     * Hide contact form until clicked\n     *\n     * @type {boolean}\n     */\n\n    $scope.reveal = false;\n\n\n    $scope.sendEnquiry = function(enquiryForm,enquiry) {\n\n        if(enquiryForm.$valid) {\n            //send seller enquiry\n            Seller.enquiry(enquiry).then(function(response) {\n                if(response.status == 201) {\n                    toastr.success('Your Enquiry is sent to '+ dog.owner.users.first_name + ' ' + dog.owner.users.last_name ,'Success');\n\n                    $scope.resetEnquiry();\n                    $scope.reveal = false;\n                    enquiryForm.$setPristine();\n                }\n            });\n        }\n    };\n\n    $scope.resetEnquiry = function()\n    {\n        $scope.enquiry = {};\n        $scope.enquiry.seller_id = dog.owner.users.id;\n        $scope.enquiry.dog_id = dog.id;\n    };\n\n    //seller id is actually user id in seller table\n    $scope.enquiry.seller_id = dog.owner.users.id;\n    $scope.enquiry.dog_id = dog.id;\n});","module.controller('RegisterController',['$scope', 'State', 'Suburb','User','Seller', function($scope, State, Suburb, User,Seller) {\n\n    //TODO: Add validation fields\n\n    /**\n     * Register form object\n     *\n     * @type {{}}\n     */\n\n    $scope.register = {};\n\n    /**\n     * Australian States\n     */\n\n    $scope.selectedState = 'Please Select...';\n\n    /**\n     * Australian Suburbs\n     */\n\n    $scope.selectedSuburb = 'Please Select...';\n\n    /**\n     * Breeder Tyoe\n     */\n\n    $scope.selectedType = 'Please Select...';\n\n    /**\n     * Get Suburb Lists\n     */\n\n    //Suburb.getList({\"state_id\": 1}).then(function(suburbs) {\n    //    $scope.suburbs = suburbs.plain();\n    //});\n\n    /**\n     * Get State Lists\n     */\n\n    State.getList().then(function(states) {\n        $scope.states = states.plain();\n    });\n\n\n    /**\n     * Select State Function and Load Suburbs.\n     *\n     * @param key\n     * @param id\n     */\n\n    $scope.selectState = function(key,id) {\n\n        $scope.selectedState = $scope.states[key].name;\n        $scope.selectedSuburb = 'Loading Suburbs...';\n\n        Suburb.getList({\"state_id\": id}).then(function(suburbs) {\n\n            $scope.selectedSuburb = 'Please Select...';\n            $scope.suburbs = suburbs.plain();\n        });\n\n        $scope.register.state_id = id;\n    };\n\n    /**\n     * Select Suburb Function\n     *\n     * @param key\n     * @param id\n     */\n\n    $scope.selectSuburb = function(key,id) {\n        $scope.selectedSuburb = $scope.suburbs[key].suburb;\n        $scope.register.suburb_id = id;\n    };\n\n\n    /**\n     * Select Type\n     */\n\n    $scope.selectType = function(type) {\n        $scope.register.type = type;\n        $scope.selectedType =  type.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    };\n\n    /**\n     *\n     *\n     * @param registerForm\n     * @param register\n     */\n    $scope.registerSeller = function(registerForm,register) {\n\n        //we are appending role for seller\n        register.role = 1;\n        // checking if form is valid, if yes\n        // proceed with request\n        if(registerForm.$valid) {\n\n            User.post(register).then(function(user) {\n                //appending saved user id\n                register.user_id = user.data.id;\n\n                //saving seller\n                Seller.post(register).then(function() {\n\n                    //cleaning form data\n                    registerForm.$setPristine();\n                    //cleaning register scope\n                    $scope.register = {};\n                    //cleaning suburb select\n                    $scope.suburbs = {};\n                    //selecting form syles\n                    $scope.selectedState    = \"Please Select ...\";\n                    $scope.selectedSuburb   = \"Please Select ...\";\n                    $scope.selectedType     = \"Please Select ...\";\n                    //TODO: TRIGGER CONFIRM MESSAGE\n\n                }).catch(function(res) {\n                    //TODO: make delete of user if seller save do not succeed\n                });\n\n            }).catch(function(res) {\n\n                if(res.status === 422) {\n                    $scope.registerErrors = res.data.errors;\n                }\n            });\n        }\n    };\n}]);","module.controller('SearchController', function($scope, Dog, $location, dogs) {\n\n    $scope.search = {};\n\n    $scope.search.tags = ['test'];\n\n    $scope.dogs = dogs;\n\n    $scope.currentPage = 1;\n\n    $scope.numPerPage = 10;\n\n    $scope.maxSize = 5;\n\n\n    angular.forEach(_.values($scope.$eval($location.search().filter)), function(filter,key) {\n        angular.forEach(filter,function(value,key) {\n            $scope.search[key] = value;\n        });\n    });\n\n    /**\n     * Watch Pagination\n     *\n     */\n\n    $scope.$watch('currentPage + numPerPage', function() {\n        var begin = (($scope.currentPage - 1) * $scope.numPerPage)\n            , end = begin + $scope.numPerPage;\n\n        $scope.filteredDogs = $scope.dogs.slice(begin, end);\n    });\n\n    /**\n     * Watch Dogs Collection\n     *\n     */\n\n    $scope.$watch('dogs',function() {\n        var begin = (($scope.currentPage - 1) * $scope.numPerPage)\n            , end = begin + $scope.numPerPage;\n\n        $scope.filteredDogs = $scope.dogs.slice(begin, end);\n    });\n\n    /**\n     * Update Filters and get filtered dogs.\n     *\n     * @param filters\n     */\n\n    $scope.updateFilters = function (filters) {\n\n        $scope.filter = {whereBetween:{},whereIn:{}};\n\n        angular.forEach(filters,function(filter,key) {\n\n            var cleanFilter = _.compact(_.values(filter));\n\n            if(cleanFilter.length) {\n\n                if(key == 'cost') {\n                    $scope.filter.whereBetween[key] = filter;\n                } else {\n                    $scope.filter.whereIn[key] = filter;\n                }\n            }\n        });\n\n        if(_.isEmpty($scope.filter.whereIn)) {\n            delete $scope.filter.whereIn;\n        }\n\n        if(_.isEmpty($scope.filter.whereBetween)) {\n            delete $scope.filter.whereBetween;\n        }\n\n        $location.search('filter',JSON.stringify($scope.filter));\n        $scope.filterDogs($scope.filter);\n    };\n\n    /**\n     * Filter Dogs\n     *\n     * @param filter\n     */\n\n    $scope.filterDogs = function(filter) {\n\n        if(typeof filter != 'undefined') {\n            Dog.getWith({relations:'owner,mother,father,breed,shelter',filter:filter}).then(function(dogs){\n                $scope.dogs = dogs.data;\n            });\n        }\n    };\n});","module.controller('SellerReviewController', function($scope, $state, reviewToken, State, Suburb, Seller,toastr) {\n\n    $scope.rating = {\n        rating1: 1,\n        rating2: 1,\n        rating3: 1,\n        rating4: 1,\n        rating5: 1,\n        review_token: reviewToken.review_token\n    };\n\n    /**\n     * Australian States\n     */\n\n    $scope.selectedState = 'Please Select...';\n\n    /**\n     * Australian Suburbs\n     */\n\n    $scope.selectedSuburb = 'Please Select...';\n\n    /**\n     * Get Australian states.\n     *\n     */\n\n    State.getList().then(function(states) {\n        $scope.states = states.plain();\n    });\n\n    /**\n     * Select State Function and Load Suburbs.\n     *\n     * @param key\n     * @param id\n     */\n\n    $scope.selectState = function(key,id) {\n\n        $scope.selectedState = $scope.states[key].name;\n        $scope.selectedSuburb = 'Loading Suburbs...';\n\n        Suburb.getList({\"state_id\": id}).then(function(suburbs) {\n\n            $scope.selectedSuburb = 'Please Select...';\n            $scope.suburbs = suburbs.plain();\n        });\n\n        $scope.rating.state_id = id;\n    };\n\n    /**\n     * Select Suburb Function\n     *\n     * @param key\n     * @param id\n     */\n\n    $scope.selectSuburb = function(key,id) {\n        $scope.selectedSuburb = $scope.suburbs[key].suburb;\n        $scope.rating.suburb_id = id;\n    };\n\n    $scope.leaveReview = function(reviewForm,rating) {\n\n        if(reviewForm.$valid) {\n\n            Seller.reviewSeller(rating).then(function(response){\n                toastr.success('Your review is submitted. Thank you!','Success!');\n                $state.go('home');\n            });\n\n        }\n    }\n});"],"sourceRoot":"/source/"}